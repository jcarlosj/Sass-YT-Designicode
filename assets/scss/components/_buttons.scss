// Solid Buttons (Placeholder selector)
%btn {
    border: {
        radius: 5px;
        style: none;
    }
    box-shadow: 2px 2px 6px 2px rgba( 0, 0, 0, 0.2 );
    color: #fff;
    font-size: 16px;
    height: 40px;
    margin:  5px 0;
    min-width: 100px;

    &:hover {
        cursor: pointer;
        background: map-get( $map: $pallete, $key: 'light' );
        color: map-get( $map: $pallete, $key: 'dark' );
    }
}

.btn- {
    // Nesting nombre de clases
    &primary,
    &success,
    &danger {
        @extend %btn;
    }

    &primary {  background: map-get( $map: $pallete, $key: 'primary' );   }
    &success {  background: map-get( $map: $pallete, $key: 'success' );    }
    &danger {   background: map-get( $map: $pallete, $key: 'danger' );    }
}

// Creamos un mixin para refactorizar el .btn-outline
@mixin button( $name, $color ) {
    &-#{ $name } {
        border: 1px solid $color;
        border-radius: 5px;
        box-shadow: 2px 2px 6px 2px rgba( $color, 0.2 );
        color: $color;
        font-size: 16px;
        height: 40px;
        margin:  5px 0;
        min-width: 100px;
        transition: .5s all ease-in-out;

        &:hover {
            background-color: $color;
            color: #fff;
        }
    }
}

// Outline Buttons (Parent selector)
.btn-outline {
    background-color: transparent;
    font-size: 16px;
    height: 40px;
    margin:  5px 0;
    min-width: 100px;
    transition: .5s all ease-in-out;

    // Itera lista de colores
    @each $name, $color in $colors {
        @include button( $name, $color );
    }

    // Itera map de paleta de colores
    @each $name, $color in $pallete {
        @include button( $name, $color );
    }
}